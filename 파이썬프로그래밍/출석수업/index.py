# 1 임의의 두 정수를 입력받아 합을 구하는 프로그램을 완성하시오.
num1 = int(input("정수를 입력해 주세요(1)"))
num2 = int(input("정수를 입력해 주세요(2)"))

if type(num1) != int and type(num2) != int:
    print("정수를 입력해주세요")
else:
    print(f"num1 과 num2 의 합은 {num1 + num2}입니다.")
    # f-string 은 문자열 앞에 접두사 'f' 를 붙이는것으로 시작하며, 중괄호 안에 변수나 표현식을 간편하게 포함시키게 한다 (python 3.6 이상)

#2 임의의 수를 입력 받아 짝수인지 홀수인지 구별하는 프로그램을 완성하시오.
num1 = int(input("정수를 입력해 주세요"))

if num1 % 2 == 0:
    print("입력한 수는 짝수 입니다.")
else:
    print("입력한 수는 홀수 입니다.")


#3 10진 정수을 점수로 입력받아 학점을 출력하는 프로그램을 완성하시오.
score = int(input("점수를 입력해 주세요"))
if score >= 90:
    print("A")
elif score >= 80:
    print("B")
elif score >= 70:
    print("C")
elif score >= 60:
    print("D")
else:
    print("F")

# [학점의 조건] 90점 이상 A, 89~80점 B, 79~70점 C, 69~60점 D, 60점 미만은 F

#4 아래 코드는 원뿔을 계산하는 프로그램의 일부분이다. 정상적으로 수행되지 않은 이유를 기술하시오.
rad = input("반지름을 입력하세요:") 
hei = input("높이를 입력하세요:") 
vol = 1/3 * 3.14 * rad ** 2 * hei

print(vol)
"""
위의 코드가 정상적으로 수행되지 않은 이유는
적절한 데이터 유형으로 변환하지 않았기 때문에 발생합니다.
현재 입력된 값은 문자열 형태로 저장되며 이를 올바르게 작동하게 하기 위해서는 int() 함수를 사용하여 정수로 변환하거나
float() 함수를 사용하여 부동 소수점 숫자로 변환해야 합니다.

수정한 내용을 아래와 같습니다.
"""
rad = int(input("반지름을 입력하세요:")) 
hei = int(input("높이를 입력하세요:")) 
vol = 1/3 * 3.14 * rad ** 2 * hei

print(vol)

#5 10진법 254을 8비트 2진법으로 변환한 결과를 기술하시오.
"""
10진수 254 를 8비트 2진법으로 변환하려면
10진수 254 를 2로 나눕니다. 그러면 나머지는 0이고 몫은 127입니다. 이를 반복하면서 모든 나머지를 구합니다.

254를 2로 나눈 나머지는 0, 몫은 127
127을 2로 나눈 나머지는 1, 몫은 63
63을 2로 나눈 나머지는 1, 몫은 31
31을 2로 나눈 나머지는 1, 몫은 15
15를 2로 나눈 나머지는 1, 몫은 7
7을 2로 나눈 나머지는 1, 몫은 3
3을 2로 나눈 나머지는 1, 몫은 1
1을 2로 나눈 나머지는 1, 몫은 0

만약 8비트로 만들기 부족한경우는 0을 앞에 채워 줍니다.

나머지를 역순으로 조합하면 
11111110 이됨으로
10진수 254는 8비트로 11111110 입니다.

이를 코드로 표현하면 아래와 같습니다
"""

number = int(input("10진수를 입력하세요:"))
binary = ""
while number > 0:
    a = number % 2
    binary = str(a) + binary
    number = number // 2

print(binary)

#6 하드웨어 구성 요소를 폰 노이만 구조에 따라 구분하여 기술하고 각 요소를 간략히 설명하시오.
"""
폰노이만 구조란?
- 하드웨어적으로 전선을 재배치할 필요 없이 소프트웨어만 교체하여 다른 연산을 수행할 수 있도록 고안된 현대 컴퓨터의 기본 구조(프로그램 내장 방식)
- 단일 저장장치(메모리)에 연산의 수행과 관련된 일련의 명령어와, 연산에 필요한 혹은 연산의 결과로 생성된 데이터를 함께 수용하는 컴퓨터 아키텍처

- 폰 노이만 구조는 제어장치, 산술 및 논리장치, 메모리 장치, 레지스터 및 입력/출력으로 구성된다. 
- CPU와 메모리는 서로 분리되어있고, 둘을 연결하는 버스를 통해 명령어 읽기, 데이터의 읽고 쓰기가 가능하다.
- 메모리는 프로그램과 데이터 영역으로 구성되고, 물리적 구분은 없다.
- 명령어와 데이터가 같은 버스를 사용하기 때문에 CPU가 명령어와 데이터에 동시 접근할 수 없다.

- CPU : 중앙처리장치, 컴퓨터 프로그램의 명령을 실행하는 전자회로. ALU, CU, 레지스터로 구성되어 있다.

- Register : 레지스터는 CPU의 고속 저장 영역. 모든 데이터는 처리되기 전에 레지스터에 저장된다. 아래의 표와 같은 다양한 역할을 하는 레지스터가 있다.

- 산술 및 논리 장치 : 산술연산(덧셈, 뺄셈 등) 및 논리 연산(AND, OR 등)을 수행 한다.

- 제어장치(CU) : ALU, 메모리, 입/출력 장치의 작동을 제어하며 아래와 같은 역할을 한다.
    - 메모리 유닛에서 읽거나, 해석한 프로그램 명령어에 어떻게 응답해야 하는지에 대한 안내
    - 다른 컴퓨터 구성요소에 필요한 타이밍 및 제어 신호를 제공

- 버스 : 컴퓨터의 한 부분에서 다른 부분으로 데이터를 전송하여, 모든 주요 내부 구성 요소를 CPU와 메모리에 연결하는 수단.

- 메모리 유닛 : 메모리 장치는 램(Random Access Memory)으로 구성되며, 하드 드라이브와 달리 이 메모리는 빠르고 CPU에서 직접 엑세스 할 수 있다.
"""